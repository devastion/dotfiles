#!/usr/bin/env bash

# Customize the following:
containerName="php"
phpunitPath="vendor/bin/phpunit"

# detect local path and remove from args
localPhpUnitResultPath='/tmp/phpunit-result.xml'
localPhpUnitCoveragePath='/tmp/cobertura.xml'
argsInput=${@}
runFile=$(echo $argsInput | awk '{print $1}')
phpTestPath=$(dirname "$runFile")
pushd $phpTestPath >/dev/null
projectPath="$(git rev-parse --show-toplevel)"
pushd >/dev/null

subPath=$(awk -F '/vendor/' '{print $1}' <<<$projectPath)
# containerName=$(sed 's#.*/##' <<< $subPath | sed s/-/_/g)

## detect test result output
for i in $argsInput; do
  case $i in
  --log-junit=*)
    outputPath="${i#*=}"
    ;;
  *) ;;
  esac
done

# replace with local
args=("${argsInput/$subPath\//}")
args=("${args//(*/}")

# Detect path
container=$(docker ps -n=-1 --filter name=$containerName --format="{{.ID}}")
if [[ -n "$container" ]]; then
  phpunitPath=$(docker exec -it $container /bin/bash -c "if [ -f vendor/bin/phpunit ]; then echo vendor/bin/phpunit; else echo bin/phpunit; fi" | tr -d '\r')
  execPath=$(docker exec -it $container /bin/bash -c "if [ -f /bin/sh ]; then echo /bin/sh; else echo /bin/bash; fi" | tr -d '\r')
  dockerPath=$(docker inspect --format {{.Config.WorkingDir}} $container)

  ## debug
  # echo "Raw ARGS: "${@}
  # echo "Params:   "${args[@]}
  # echo "Docker:   "$dockerPath
  # echo "Local:    "$projectPath
  # echo "Result:   "$outputPath
  # echo "docker exec -i "$container" php -d memory_limit=-1 "$phpunitPath" "${args[@]}

  # Run the tests
  docker exec -it $container $execPath -c "XDEBUG_MODE=coverage $phpunitPath --coverage-cobertura ${localPhpUnitCoveragePath} ${args}"
  # docker exec -it $container $phpunitPath -d memory_limit=-1 ${args[@]}

  # copy results
  docker cp -a "$container:$outputPath" "$outputPath" | - &>/dev/null
  docker cp "$container:$localPhpUnitCoveragePath" "./coverage/cobertura.xml" | - &>/dev/null

  # replace docker path to locals
  sed -i '_' "s#$dockerPath#$projectPath#g" $outputPath
else
  eval "$phpunitPath"
fi
